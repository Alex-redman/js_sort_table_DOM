{"mappings":"ACEA,SAAS,gBAAgB,CAAC,mBAAoB,WAC5C,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAU,EAAM,gBAAgB,CAAC,YACjC,EAAQ,EAAM,aAAa,CAAC,SAElC,EAAQ,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACE,EAAO,gBAAgB,CAAC,QAAS,WAC/B,IAAM,EAAO,MAAM,IAAI,CAAC,EAAM,gBAAgB,CAAC,OACzC,EACJ,AAAuB,QAAvB,EAAO,WAAW,EAAc,AAAuB,WAAvB,EAAO,WAAW,CAC9C,EAAe,SAAC,CAAtB,EAA8B,OAAA,EAAI,QAAQ,CAAC,EAAM,CAAC,WAAW,CAAC,IAAI,E,EAElE,EAAK,IAAI,CAAC,SAAC,CAAA,CAAM,CAAjB,EACE,IAAM,EAAQ,EAAa,GACrB,EAAQ,EAAa,UAE3B,AAAI,EAIK,AAHQ,WAAW,EAAM,OAAO,CAAC,aAAc,KACvC,WAAW,EAAM,OAAO,CAAC,aAAc,KAI/C,EAAM,aAAa,CAAC,EAE/B,GACA,EAAM,SAAS,CAAG,GAClB,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,WAAW,CAAC,E,EAC1C,EACF,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var table = document.querySelector(\"table\");\n    var headers = table.querySelectorAll(\"thead th\");\n    var tbody = table.querySelector(\"tbody\");\n    headers.forEach(function(header, index) {\n        header.addEventListener(\"click\", function() {\n            var rows = Array.from(tbody.querySelectorAll(\"tr\"));\n            var isNumericColumn = header.textContent === \"Age\" || header.textContent === \"Salary\";\n            var getCellValue = function(row) {\n                return row.children[index].textContent.trim();\n            };\n            rows.sort(function(rowA, rowB) {\n                var cellA = getCellValue(rowA);\n                var cellB = getCellValue(rowB);\n                if (isNumericColumn) {\n                    var valueA = parseFloat(cellA.replace(/[^0-9.-]+/g, \"\"));\n                    var valueB = parseFloat(cellB.replace(/[^0-9.-]+/g, \"\"));\n                    return valueA - valueB;\n                } else return cellA.localeCompare(cellB);\n            });\n            tbody.innerHTML = \"\";\n            rows.forEach(function(row) {\n                return tbody.appendChild(row);\n            });\n        });\n    });\n});\n\n//# sourceMappingURL=index.84e2bc8a.js.map\n","'use strict';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const table = document.querySelector('table');\n  const headers = table.querySelectorAll('thead th');\n  const tbody = table.querySelector('tbody');\n\n  headers.forEach((header, index) => {\n    header.addEventListener('click', () => {\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n      const isNumericColumn =\n        header.textContent === 'Age' || header.textContent === 'Salary';\n      const getCellValue = (row) => row.children[index].textContent.trim();\n\n      rows.sort((rowA, rowB) => {\n        const cellA = getCellValue(rowA);\n        const cellB = getCellValue(rowB);\n\n        if (isNumericColumn) {\n          const valueA = parseFloat(cellA.replace(/[^0-9.-]+/g, ''));\n          const valueB = parseFloat(cellB.replace(/[^0-9.-]+/g, ''));\n\n          return valueA - valueB;\n        } else {\n          return cellA.localeCompare(cellB);\n        }\n      });\n      tbody.innerHTML = '';\n      rows.forEach((row) => tbody.appendChild(row));\n    });\n  });\n});\n"],"names":["document","addEventListener","table","querySelector","headers","querySelectorAll","tbody","forEach","header","index","rows","Array","from","isNumericColumn","textContent","getCellValue","row","children","trim","sort","rowA","rowB","cellA","cellB","valueA","parseFloat","replace","localeCompare","innerHTML","appendChild"],"version":3,"file":"index.84e2bc8a.js.map"}